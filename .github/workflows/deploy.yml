---
name: Continuous Deployment

on:
  push:
    # Run workflow every time something is pushed to the main branch
    branches:
      - main
      - master
  # allow manual triggers for now too
  workflow_dispatch:
    manual: true

# Remember to set the following secrets in your repository's settings:
# DOCKER_USERNAME
# DOCKER_PASSWORD
# SSH_USER
# SSH_KEY
# SSH_HOST

jobs:
  build:
    runs-on: ubuntu-latest
    environment: AnoPyBot
    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2 

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Bot
        uses: docker/build-push-action@v2
        with:
          context: ./bot
          file: ./bot/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ano-py-bot:runtime
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ano-py-bot:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ano-py-bot:webbuildcache,mode=max
        env:
          IS_PROD: ${{ vars.IS_PROD }}
          POSTGRES_USER: ${{ secrets.POSTGRESS_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRESS_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRESS_DB }}
          POSTGRES_PORT: ${{ secrets.POSTGRESS_PORT }}
          PYBOTTOKEN: ${{ secrets.PYBOTTOKEN }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/bot.key
          chmod 600 ~/.ssh/bot.key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Copy remote_files directory to server
        run: |
          scp -i ~/.ssh/bot.key -o StrictHostKeyChecking=no deploy.sh $SSH_USER@$SSH_HOST:/AnoPyBot
          scp -i ~/.ssh/bot.key -o StrictHostKeyChecking=no lavalink/ $SSH_USER@$SSH_HOST:/AnoPyBot
          scp -i ~/.ssh/bot.key -o StrictHostKeyChecking=no docker-compose.yml $SSH_USER@$SSH_HOST:/AnoPyBot

      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: >
          ssh $SSH_USER@$SSH_HOST
          -i ~/.ssh/bot.key -o StrictHostKeyChecking=no
          'cd /AnoPyBot; /AnoPyBot/deploy.sh'
